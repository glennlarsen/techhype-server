{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Techhype-API",
    "description": "Documentation automatically generated by the <b>swagger-autogen</b> module."
  },
  "host": "https://tricky-cyan-zipper.cyclic.app",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Index"
        ],
        "description": "Landing page of the Server.",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/upload": {
      "post": {
        "tags": [
          "FileUpload"
        ],
        "description": "Upload files to AWS s3",
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "description": "image upload to AWS s3",
            "required": true,
            "type": "file",
            "schema": {
              "$ref": "#/definitions/FileUpload"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Logs the user into the application. Both email and password must be correct. After successful login, the JWT token is returned - use it later in the Authorization header to access other endpoints.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Creates a new account for the user. Name, email and password needs to be provided. After successful signup, the user can login with the created user to get a valid jwt token",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/UserSignup"
            }
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/auth/verify/{token}": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Verifies the token sent to the users email.",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Get the logged in user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cards/": {
      "get": {
        "tags": [
          "Card"
        ],
        "description": "get all the logged in users cards.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Card"
        ],
        "description": "Creates a new card for the logged in user.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cards/{cardId}": {
      "get": {
        "tags": [
          "CardProfile"
        ],
        "description": "Retrieve cardProfiles for a specific card.",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "Card"
        ],
        "description": "Update an existing card for the logged in user.",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Card"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Card"
        ],
        "description": "Delete a card and its associated card profiles.",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "CardProfile"
        ],
        "description": "Create a new cardProfile for a specific card with an image upload.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Upload profile image.",
            "type": "file"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "birthday",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "phone",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "website",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "website2",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                },
                "title": {
                  "example": "any"
                },
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                },
                "birthday": {
                  "example": "any"
                },
                "phone": {
                  "example": "any"
                },
                "email": {
                  "example": "any"
                },
                "website": {
                  "example": "any"
                },
                "website2": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/cards/{cardId}/{profileId}": {
      "put": {
        "tags": [
          "CardProfile"
        ],
        "description": "Updates a cardProfile for a specific card.",
        "consumes": [
          "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Upload profile image.",
            "type": "file"
          },
          {
            "name": "name",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "title",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "birthday",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "phone",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "email",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "website",
            "in": "formData",
            "type": "string"
          },
          {
            "name": "website2",
            "in": "formData",
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "CardProfile"
        ],
        "description": "Delete a card profile for a specific card.",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/address/{profileId}": {
      "get": {
        "tags": [
          "Address"
        ],
        "description": "get address for a card profile.",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "Address"
        ],
        "description": "Add or update an address for a card profile.",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Address"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "Address"
        ],
        "description": "Delete an address for a card profile.",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/address/{addressId}": {
      "get": {
        "tags": [
          "Address"
        ],
        "description": "get address By using the address ID.",
        "parameters": [
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/workInfo/{profileId}": {
      "get": {
        "tags": [
          "WorkInfo"
        ],
        "description": "get Work info for a card profile.",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "WorkInfo"
        ],
        "description": "Add or update Work info for a card profile.",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/WorkInfo"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "WorkInfo"
        ],
        "description": "Delete Work info for a card profile.",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/workInfo/{workInfoId}": {
      "get": {
        "tags": [
          "WorkInfo"
        ],
        "description": "get Work info By using the WorkInfo ID.",
        "parameters": [
          {
            "name": "workInfoId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/socialMedia/{profileId}": {
      "get": {
        "tags": [
          "SocialMedia"
        ],
        "description": "get Social media for a card profile.",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "SocialMedia"
        ],
        "description": "Add or update a social media for a card profile.",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/SocialMedia"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "delete": {
        "tags": [
          "SocialMedia"
        ],
        "description": "Delete a social media for a card profile.",
        "parameters": [
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/socialMedia/{socialMediaId}": {
      "get": {
        "tags": [
          "SocialMedia"
        ],
        "description": "get Social media by using the socialmedia ID.",
        "parameters": [
          {
            "name": "socialMediaId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  },
  "definitions": {
    "UserLogin": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "glenn@techhype.no"
        },
        "password": {
          "type": "string",
          "example": "Password938#"
        }
      },
      "required": [
        "email",
        "password"
      ]
    },
    "UserSignup": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "Glenn"
        },
        "lastName": {
          "type": "string",
          "example": "Larsen"
        },
        "email": {
          "type": "string",
          "example": "glenn@techhype.no"
        },
        "password": {
          "type": "string",
          "example": "Password938#"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "email",
        "password"
      ]
    },
    "Card": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Work Card"
        }
      },
      "required": [
        "name"
      ]
    },
    "CardProfile": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "My Profile"
        },
        "title": {
          "type": "string",
          "example": "Mr"
        },
        "firstName": {
          "type": "string",
          "example": "Glenn"
        },
        "lastName": {
          "type": "string",
          "example": "Larsen"
        },
        "birthday": {
          "type": "string",
          "example": "06.12.1990"
        },
        "phone": {
          "type": "string",
          "example": "91771028"
        },
        "email": {
          "type": "string",
          "example": "glenn@techhype.no"
        },
        "website": {
          "type": "string",
          "example": "www.techhype.no"
        },
        "website2": {
          "type": "string",
          "example": "www.hjemferd.no"
        }
      },
      "required": [
        "name",
        "title",
        "firstName",
        "lastName",
        "birthday",
        "phone",
        "email",
        "website",
        "website2"
      ]
    },
    "FileUpload": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "object"
        },
        "properties": {
          "type": "object",
          "properties": {
            "image": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "file"
                },
                "description": {
                  "type": "string",
                  "example": "Image to upload (e.g., JPEG, PNG)"
                }
              }
            }
          }
        },
        "required": {
          "type": "array",
          "example": [
            "image"
          ],
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Address": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "example": "Norway"
        },
        "street": {
          "type": "string",
          "example": "Vestre Holbergsallmenningen 15"
        },
        "postalCode": {
          "type": "string",
          "example": "3002"
        },
        "state": {
          "type": "string",
          "example": "Vestland"
        },
        "city": {
          "type": "string",
          "example": "Bergen"
        }
      },
      "required": [
        "country",
        "street",
        "postalCode",
        "state",
        "city"
      ]
    },
    "SocialMedia": {
      "type": "object",
      "properties": {
        "facebookLink": {
          "type": "string",
          "example": "www.facebook.com/Erik"
        },
        "linkedinLink": {
          "type": "string",
          "example": "www.linkedIn.com"
        },
        "snapLink": {
          "type": "string",
          "example": "www.snapchat.com"
        },
        "instagramLink": {
          "type": "string",
          "example": "www.instagram.com/akam"
        }
      },
      "required": [
        "facebookLink",
        "linkedinLink",
        "snapLink",
        "instagramLink"
      ]
    },
    "WorkInfo": {
      "type": "object",
      "properties": {
        "company": {
          "type": "string",
          "example": "Techhype AS"
        },
        "position": {
          "type": "string",
          "example": "CEO"
        },
        "workPhone": {
          "type": "string",
          "example": "9177128"
        },
        "workEmail": {
          "type": "string",
          "example": "glenn@techhype.no"
        }
      },
      "required": [
        "company",
        "position",
        "workPhone",
        "workEmail"
      ]
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}